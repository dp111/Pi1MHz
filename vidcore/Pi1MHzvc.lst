Sections:
00: "org0001:0" (0-90)


Source: "Pi1MHzvc.s"
                            	     1: #-------------------------------------------------------------------------
                            	     2: # VideoCore IV implementation of 1MHz handler
                            	     3: #-------------------------------------------------------------------------
                            	     4: 
                            	     5: # on entry
                            	     6: # GPIO pins setup by arm
                            	     7: # Addresses passed into vc are VC based
                            	     8: # gpfsel_data_idle setup
                            	     9: 
                            	    10: #  r0 - pointer to shared memory ( VC address) of 1MHz registers
                            	    11: #  r1 - pointer to data to xfer to ARM
                            	    12: #  r2 -
                            	    13: #  r3 - data outputs
                            	    14: #  r4 - debug output control
                            	    15: #  r5 - debug pin mask (0 = no debug  xx= debug pin e.g 1<<21)
                            	    16: 
                            	    17: # Internal register allocation
                            	    18: #  r0 - pointer to shared memory ( VC address) of tube registers
                            	    19: #  r1 - pointer to data to xfer to ARM
                            	    20: #  r2 - unused
                            	    21: #  r3 - Databus and test pin output select
                            	    22: #  r4 - debug output control
                            	    23: #  r5 - debug pin mask (0 = no debug  xx= debug pin e.g 1<<21)
                            	    24: #  r6 - GPFSEL0 constant
                            	    25: #  r7 - External nOE pin
                            	    26: #  r8 - temp
                            	    27: #  r9 -
                            	    28: # r10 -
                            	    29: # r11 -
                            	    30: # r12 - GPIO pins value
                            	    31: # r13 - pointer to doorbell register
                            	    32: # r14 -
                            	    33: # r15 -
                            	    34: 
                            	    35: # GPIO registers
                            	    36: .equ GPFSEL0,       0x7e200000
                            	    37: .equ GPFSEL0_offset, 0
                            	    38: .equ GPSET0_offset, 0x1C
                            	    39: .equ GPCLR0_offset, 0x28
                            	    40: .equ GPLEV0_offset, 0x34
                            	    41: .equ GPEDS0_offset, 0x40
                            	    42: 
                            	    43: # fixed pin bit positions ( TEST passed in dynamically)
                            	    44: .equ nRST,         26
                            	    45: .equ nPCFD,        25
                            	    46: .equ nPCFC,        24
                            	    47: 
                            	    48: .equ RnW,          10
                            	    49: .equ CLK,          27
                            	    50: .equ DATASHIFT,    2
                            	    51: .equ ADDRBUS_SHIFT, (16)
                            	    52: .equ OUTPUTBIT,   (15)
                            	    53: 
                            	    54: .equ ADDRESSBUS_WIDTH, (8 + 1)
                            	    55: .equ DATABUS_WIDTH, 8
                            	    56: 
                            	    57: .equ NPCFC_MASK,    (1<<nPCFC)
                            	    58: 
                            	    59: .equ Pi1MHz_MEM_RNW, (1<<9)
                            	    60: 
                            	    61: .equ GPU_ARM_DBELL, 0x7E00B844
                            	    62: 
                            	    63: .org 0
                            	    64: 
                            	    65: # disable interrupts
                            	    66: 
00:00000000 0500            	    67:   di
00:00000002 434D            	    68:    or     r3, r4       # add in test pin so that it is still enabled
00:00000004 06E80000207E    	    69:    mov    r6, GPFSEL0
00:0000000A 1760            	    70:    mov    r7, 1            # external nOE pin
                            	    71: 
00:0000000C 0DE844B8007E    	    72:    mov    r13, GPU_ARM_DBELL
00:00000012 0100            	    73:    nop
00:00000014 0100            	    74:    nop
00:00000016 0100            	    75:    nop
00:00000018 0100            	    76:    nop
00:0000001A 0100            	    77:    nop
00:0000001C 0100            	    78:    nop
00:0000001E 0100            	    79:    nop
                            	    80: 
                            	    81: 
                            	    82: # poll for nPCFC or nPCFD being low
                            	    83: 
                            	    84: Poll_loop:
00:00000020 653A            	    85:    st     r5, GPCLR0_offset(r6)  # Turn off debug signal
                            	    86: 
                            	    87: Poll_access_low:
00:00000022 6C2D            	    88:    ld     r12, GPLEV0_offset(r6)  # loop until we see FRED or JIM low
                            	    89: 
00:00000024 8C6D            	    90:    btst   r12, nPCFC
00:00000026 8CC1D960        	    91:    btstne r12, nPCFD
00:0000002A FC18            	    92:    bne    Poll_access_low
                            	    93: 
00:0000002C 6537            	    94:    st     r5, GPSET0_offset(r6)  # Debug pin
                            	    95: 
00:0000002E BC6D            	    96:    btst   r12, CLK
00:00000030 0818            	    97:    beq    waitforclkhigh
                            	    98: 
                            	    99: waitforclklow:                   # wait for extra half cycle to end
00:00000032 6C2D            	   100:    ld     r12, GPLEV0_offset(r6)
00:00000034 8C6D            	   101:    btst   r12, nPCFC
00:00000036 8CC1D960        	   102:    btstne r12, nPCFD
00:0000003A F318            	   103:    bne    Poll_loop
                            	   104: 
00:0000003C BC6D            	   105:    btst   r12, CLK
00:0000003E FA18            	   106:    bne    waitforclklow
                            	   107: 
                            	   108: .balignw 4,1 # Align with nops
                            	   109: waitforclkhigh:
                            	   110: waitforclkhighloop:
00:00000040 48C35067        	   111:    LSR    r8, r12,ADDRBUS_SHIFT
00:00000044 6C2D            	   112:    ld     r12, GPLEV0_offset(r6)
00:00000046 986E            	   113:    extu   r8, ADDRESSBUS_WIDTH   # bmask Isolate address bus
00:00000048 48A00807        	   114:    ldh    r8, (r0,r8)            # get byte to write out
                            	   115: 
00:0000004C BC6D            	   116:    btst   r12, CLK
00:0000004E 7918            	   117:    beq    waitforclkhighloop
                            	   118: 
                            	   119: # seen rising edge of CLK
                            	   120: # so address bus has now been setup
                            	   121: 
00:00000050 8C6D            	   122:    btst   r12, nPCFC
00:00000052 8CC1D960        	   123:    btstne r12, nPCFD
00:00000056 E518            	   124:    bne    Poll_loop
                            	   125: 
                            	   126: # check if we are in a read or write cycle
                            	   127: # we do this here while the read above is stalling
                            	   128: 
00:00000058 AC6C            	   129:    btst   r12, RnW
00:0000005A 287C            	   130:    lsl    r8, DATASHIFT
00:0000005C 1118            	   131:    beq    writecycle
                            	   132: 
                            	   133: 
00:0000005E F86C            	   134:    btst   r8, OUTPUTBIT
00:00000060 A86E            	   135:    extu   r8, DATABUS_WIDTH + DATASHIFT      # bmask isolate the databus NB lower bit are already zero form above
                            	   136: 
00:00000062 6837            	   137:    st     r8, GPSET0_offset(r6)  # set up databus
00:00000064 0318            	   138:    beq    skipenablingbus
                            	   139: 
00:00000066 6330            	   140:    st     r3, GPFSEL0_offset(r6) # set databus to output ( only if it has been written to)
00:00000068 673A            	   141:    st     r7, GPCLR0_offset(r6)  # set external output enable low
                            	   142: 
                            	   143:  skipenablingbus:
00:0000006A 1C09            	   144:    st     r12, (r1)              # post data
00:0000006C DC09            	   145:    st     r12, (r13)             # ring doorbell
                            	   146: 
                            	   147: .balignw 4,1 # Align with nops
                            	   148: waitforclklow2loop:
00:00000070 6C2D            	   149:    ld     r12, GPLEV0_offset(r6)
00:00000072 BC6D            	   150:    btst   r12, CLK
00:00000074 FE18            	   151:    bne    waitforclklow2loop
                            	   152: 
00:00000076 6737            	   153:    st     r7, GPSET0_offset(r6)  # set external output enable high
00:00000078 6430            	   154:    st     r4, GPFSEL0_offset(r6) # data bus to inputs except debug
00:0000007A 683A            	   155:    st     r8, GPCLR0_offset(r6)  # clear databus low
                            	   156: 
00:0000007C 521F            	   157:    b      Poll_loop
                            	   158: 
                            	   159: writecycle:
00:0000007E 673A            	   160:    st     r7, GPCLR0_offset(r6)  # set external output enable low
                            	   161: waitforclkloww2:
00:00000080 C840            	   162:    mov    r8,r12
00:00000082 6C2D            	   163:    ld     r12, GPLEV0_offset(r6)
00:00000084 BC6D            	   164:    btst   r12, CLK
00:00000086 FD18            	   165:    bne    waitforclkloww2
                            	   166: 
00:00000088 1809            	   167:    st     r8, (r1)         # post data
00:0000008A D809            	   168:    st     r8, (r13)        # ring doorbell
00:0000008C 6737            	   169:    st     r7, GPSET0_offset(r6)  # set external output enable high
00:0000008E 491F            	   170:    b      Poll_loop
                            	   171: 


Symbols by name:
ADDRBUS_SHIFT                    S:00000010
ADDRESSBUS_WIDTH                 S:00000009
CLK                              S:0000001B
DATABUS_WIDTH                    S:00000008
DATASHIFT                        S:00000002
GPCLR0_offset                    S:00000028
GPFSEL0                          S:7E200000
GPFSEL0_offset                   S:00000000
GPLEV0_offset                    S:00000034
GPSET0_offset                    S:0000001C
GPU_ARM_DBELL                    S:7E00B844
OUTPUTBIT                        S:0000000F
Poll_access_low                  A:00000022
Poll_loop                        A:00000020
RnW                              S:0000000A
nPCFC                            S:00000018
nPCFD                            S:00000019
skipenablingbus                  A:0000006A
waitforclkhigh                   A:00000040
waitforclkhighloop               A:00000040
waitforclklow                    A:00000032
waitforclklow2loop               A:00000070
waitforclkloww2                  A:00000080
writecycle                       A:0000007E

Symbols by value:
00000000 GPFSEL0_offset
00000002 DATASHIFT
00000008 DATABUS_WIDTH
00000009 ADDRESSBUS_WIDTH
0000000A RnW
0000000F OUTPUTBIT
00000010 ADDRBUS_SHIFT
00000018 nPCFC
00000019 nPCFD
0000001B CLK
0000001C GPSET0_offset
00000020 Poll_loop
00000022 Poll_access_low
00000028 GPCLR0_offset
00000032 waitforclklow
00000034 GPLEV0_offset
00000040 waitforclkhigh
00000040 waitforclkhighloop
0000006A skipenablingbus
00000070 waitforclklow2loop
0000007E writecycle
00000080 waitforclkloww2
7E00B844 GPU_ARM_DBELL
7E200000 GPFSEL0
