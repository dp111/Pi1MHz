Sections:
00: "org0001:0" (0-100)


Source: "Pi1MHzvc.s"
                            	     1: #-------------------------------------------------------------------------
                            	     2: # VideoCore IV implementation of 1MHz handler
                            	     3: #-------------------------------------------------------------------------
                            	     4: 
                            	     5: # on entry
                            	     6: # GPIO pins setup by arm
                            	     7: # Addresses passed into vc are VC based
                            	     8: # gpfsel_data_idle setup
                            	     9: 
                            	    10: #  r0 - pointer to shared memory ( VC address) of 1MHz registers
                            	    11: #  r1 - pointer to data to xfer to ARM
                            	    12: #  r2 - nOE pin
                            	    13: #  r3 - data outputs
                            	    14: #  r4 - debug output control
                            	    15: #  r5 - debug pin mask (0 = no debug  xx= debug pin e.g 1<<21)
                            	    16: 
                            	    17: # Internal register allocation
                            	    18: #  r0 - pointer to shared memory ( VC address) of tube registers
                            	    19: #  r1 - pointer to data to xfer to ARM
                            	    20: #  r2 - External nOE pin
                            	    21: #  r3 - Databus and test pin output select
                            	    22: #  r4 - debug output control
                            	    23: #  r5 - debug pin mask (0 = no debug  xx= debug pin e.g 1<<21)
                            	    24: #  r6 - GPFSEL0 constant
                            	    25: #  r7 -
                            	    26: #  r8 - temp
                            	    27: #  r9 -
                            	    28: # r10 -
                            	    29: # r11 -
                            	    30: # r12 - GPIO pins value
                            	    31: # r13 - pointer to doorbell register
                            	    32: # r14 -
                            	    33: # r15 -
                            	    34: 
                            	    35: # GPIO registers
                            	    36: .equ GPFSEL0,       0x7e200000
                            	    37: .equ GPFSEL0_offset, 0
                            	    38: .equ GPSET0_offset, 0x1C
                            	    39: .equ GPCLR0_offset, 0x28
                            	    40: .equ GPLEV0_offset, 0x34
                            	    41: .equ GPEDS0_offset, 0x40
                            	    42: 
                            	    43: # fixed pin bit positions ( TEST passed in dynamically)
                            	    44: .equ nRST,         26
                            	    45: .equ nPCFD,        25
                            	    46: .equ nPCFC,        24
                            	    47: 
                            	    48: .equ RnW,          10
                            	    49: .equ CLK,          27
                            	    50: .equ DATASHIFT,    2
                            	    51: .equ ADDRBUS_SHIFT, (16)
                            	    52: .equ OUTPUTBIT,   (15)
                            	    53: 
                            	    54: .equ ADDRESSBUS_WIDTH, (8 + 1)
                            	    55: .equ DATABUS_WIDTH, 8
                            	    56: 
                            	    57: .equ NPCFC_MASK,    (1<<nPCFC)
                            	    58: 
                            	    59: .equ Pi1MHz_MEM_RNW, (1<<9)
                            	    60: 
                            	    61: .equ GPU_ARM_DBELL, 0x7E00B844
                            	    62: 
                            	    63: .org 0                     # NB all code relative
                            	    64: 
00:00000000 0500            	    65:    di                      # disable interrupts
00:00000002 434D            	    66:    or     r3, r4           # add in test pin so that it is still enabled
00:00000004 06E80000207E    	    67:    mov    r6, GPFSEL0
                            	    68: 
00:0000000A 0DE844B8007E    	    69:    mov    r13, GPU_ARM_DBELL
00:00000010 026A            	    70:    cmp    r2, 0
00:00000012 BE18            	    71:    bne    use_nOE
00:00000014 061F            	    72:    BEQ    Poll_loop
                            	    73: 
                            	    74: # poll for nPCFC or nPCFD being low
                            	    75: .balignw 16,1 # Align with nops
                            	    76: Poll_loop:
                            	    77:    # st     r5, GPCLR0_offset(r6)  # Turn off debug signal
                            	    78: 
                            	    79: Poll_access_low:
00:00000020 6C2D            	    80:    ld     r12, GPLEV0_offset(r6)  # loop until we see FRED or JIM low
                            	    81: 
00:00000022 8C6D            	    82:    btst   r12, nPCFC
00:00000024 8CC1D960        	    83:    btstne r12, nPCFD
00:00000028 FC18            	    84:    bne    Poll_access_low
                            	    85: 
                            	    86:    # st     r5, GPSET0_offset(r6)  # Debug pin
                            	    87: 
00:0000002A BC6D            	    88:    btst   r12, CLK
00:0000002C 0A18            	    89:    beq    waitforclkhigh
                            	    90: 
                            	    91: waitforclklow:                   # wait for extra half cycle to end
00:0000002E 6C2D            	    92:    ld     r12, GPLEV0_offset(r6)
00:00000030 8C6D            	    93:    btst   r12, nPCFC
00:00000032 8CC1D960        	    94:    btstne r12, nPCFD
00:00000036 F518            	    95:    bne    Poll_loop
                            	    96: 
00:00000038 BC6D            	    97:    btst   r12, CLK
00:0000003A FA18            	    98:    bne    waitforclklow
                            	    99: 
                            	   100: .balignw 16,1 # Align with nops
                            	   101: waitforclkhigh:
                            	   102: waitforclkhighloop:
00:00000040 48C35067        	   103:    LSR    r8, r12,ADDRBUS_SHIFT
00:00000044 6C2D            	   104:    ld     r12, GPLEV0_offset(r6)
00:00000046 986E            	   105:    extu   r8, ADDRESSBUS_WIDTH   # bmask Isolate address bus
00:00000048 48A00807        	   106:    ldh    r8, (r0,r8)            # get byte to write out
                            	   107: 
00:0000004C BC6D            	   108:    btst   r12, CLK
00:0000004E 7918            	   109:    beq    waitforclkhighloop
                            	   110: 
                            	   111: # seen rising edge of CLK
                            	   112: # so address bus has now been setup
                            	   113: 
00:00000050 8C6D            	   114:    btst   r12, nPCFC
00:00000052 8CC1D960        	   115:    btstne r12, nPCFD
00:00000056 E518            	   116:    bne    Poll_loop
                            	   117: 
                            	   118: # check if we are in a read or write cycle
                            	   119: # we do this here while the read above is stalling
                            	   120: 
00:00000058 AC6C            	   121:    btst   r12, RnW
00:0000005A 287C            	   122:    lsl    r8, DATASHIFT
00:0000005C 1218            	   123:    beq    writecycle
                            	   124: 
                            	   125:   # btst   r8, OUTPUTBIT
00:0000005E A86E            	   126:    extu   r8, DATABUS_WIDTH + DATASHIFT      # bmask isolate the databus NB lower bit are already zero form above
                            	   127: 
00:00000060 6837            	   128:    st     r8, GPSET0_offset(r6)  # set up databus
00:00000062 6330            	   129:    st     r3, GPFSEL0_offset(r6) # set databus to output
00:00000064 1C09            	   130:    st     r12, (r1)              # post data
00:00000066 DC09            	   131:    st     r12, (r13)             # ring doorbell
                            	   132: 
                            	   133: waitforclklow2loop:
00:00000068 6C2D            	   134:    ld     r12, GPLEV0_offset(r6)
00:0000006A BC6D            	   135:    btst   r12, CLK
00:0000006C FE18            	   136:    bne    waitforclklow2loop
                            	   137: 
00:0000006E 6430            	   138:    st     r4, GPFSEL0_offset(r6) # data bus to inputs except debug
00:00000070 683A            	   139:    st     r8, GPCLR0_offset(r6)  # clear databus low
                            	   140: 
00:00000072 571F            	   141:    b      Poll_loop
                            	   142: 
                            	   143: .balignw 16,1 # Align with nops
                            	   144: writecycle:
                            	   145: waitforclkloww2:
00:00000080 C840            	   146:    mov    r8,r12
00:00000082 6C2D            	   147:    ld     r12, GPLEV0_offset(r6)
00:00000084 BC6D            	   148:    btst   r12, CLK
00:00000086 FD18            	   149:    bne    waitforclkloww2
                            	   150: 
00:00000088 1809            	   151:    st     r8, (r1)         # post data
00:0000008A D809            	   152:    st     r8, (r13)        # ring doorbell
00:0000008C 4A1F            	   153:    b      Poll_loop
                            	   154: 
                            	   155: 
                            	   156: #
                            	   157: # Same as above but with nOE pin ( only for system without the screen enabled
                            	   158: #
                            	   159: use_nOE:
00:0000008E A960            	   160:    mov    r9, GPCLR0_offset>>2
                            	   161: .balignw 16,1 # Align with nops
                            	   162: 
                            	   163: nOE_Poll_loop:
00:00000090 653A            	   164:    st     r5, GPCLR0_offset(r6)  # Turn off debug signal
                            	   165: 
                            	   166: nOE_Poll_access_low:
00:00000092 6C2D            	   167:    ld     r12, GPLEV0_offset(r6)  # loop until we see FRED or JIM low
                            	   168: 
00:00000094 8C6D            	   169:    btst   r12, nPCFC
00:00000096 8CC1D960        	   170:    btstne r12, nPCFD
00:0000009A FC18            	   171:    bne    nOE_Poll_access_low
                            	   172: 
00:0000009C 6537            	   173:    st     r5, GPSET0_offset(r6)  # Debug pin
                            	   174: 
00:0000009E BC6D            	   175:    btst   r12, CLK
00:000000A0 0818            	   176:    beq    nOE_waitforclkhigh
                            	   177: 
                            	   178: nOE_waitforclklow:                   # wait for extra half cycle to end
00:000000A2 6C2D            	   179:    ld     r12, GPLEV0_offset(r6)
00:000000A4 8C6D            	   180:    btst   r12, nPCFC
00:000000A6 8CC1D960        	   181:    btstne r12, nPCFD
00:000000AA F318            	   182:    bne    nOE_Poll_loop
                            	   183: 
00:000000AC BC6D            	   184:    btst   r12, CLK
00:000000AE FA18            	   185:    bne    nOE_waitforclklow
                            	   186: 
                            	   187: .balignw 16,1 # Align with nops
                            	   188: nOE_waitforclkhigh:
                            	   189: nOE_waitforclkhighloop:
00:000000B0 48C35067        	   190:    LSR    r8, r12,ADDRBUS_SHIFT
00:000000B4 6C2D            	   191:    ld     r12, GPLEV0_offset(r6)
00:000000B6 986E            	   192:    extu   r8, ADDRESSBUS_WIDTH   # bmask Isolate address bus
00:000000B8 48A00807        	   193:    ldh    r8, (r0,r8)            # get byte to write out
                            	   194: 
00:000000BC BC6D            	   195:    btst   r12, CLK
00:000000BE 7918            	   196:    beq    nOE_waitforclkhighloop
                            	   197: 
                            	   198: # seen rising edge of CLK
                            	   199: # so address bus has now been setup
                            	   200: 
00:000000C0 8C6D            	   201:    btst   r12, nPCFC
00:000000C2 8CC1D960        	   202:    btstne r12, nPCFD
00:000000C6 E518            	   203:    bne    nOE_Poll_loop
                            	   204: 
                            	   205: # check if we are in a read or write cycle
                            	   206: # we do this here while the read above is stalling
                            	   207: 
00:000000C8 AC6C            	   208:    btst   r12, RnW
00:000000CA 287C            	   209:    lsl    r8, DATASHIFT
00:000000CC 1118            	   210:    beq    nOE_writecycle
                            	   211: 
00:000000CE F86C            	   212:    btst   r8, OUTPUTBIT
00:000000D0 A86E            	   213:    extu   r8, DATABUS_WIDTH + DATASHIFT      # bmask isolate the databus NB lower bit are already zero form above
                            	   214: 
00:000000D2 6837            	   215:    st    r8, GPSET0_offset(r6)  # set up databus
00:000000D4 6330            	   216:    st    r3, GPFSEL0_offset(r6) # set databus to output
00:000000D6 0318            	   217:    beq   bytenotwrittento
00:000000D8 22A00937        	   218:    st    r2,(r6,r9)             # set external output enable low ( only if it has been written to)
                            	   219: bytenotwrittento:
00:000000DC 1C09            	   220:    st    r12, (r1)              # post data
00:000000DE DC09            	   221:    st    r12, (r13)             # ring doorbell
                            	   222: 
                            	   223: .balignw 4,1 # Align with nops
                            	   224: nOE_waitforclklow2loop:
00:000000E0 6C2D            	   225:    ld    r12, GPLEV0_offset(r6)
00:000000E2 BC6D            	   226:    btst  r12, CLK
00:000000E4 FE18            	   227:    bne   nOE_waitforclklow2loop
                            	   228: 
00:000000E6 6237            	   229:    st    r2, GPSET0_offset(r6)  # set external output enable high
00:000000E8 6430            	   230:    st    r4, GPFSEL0_offset(r6) # data bus to inputs except debug
00:000000EA 683A            	   231:    st    r8, GPCLR0_offset(r6)  # clear databus low
                            	   232: 
00:000000EC 521F            	   233:    b      nOE_Poll_loop
                            	   234: 
                            	   235: nOE_writecycle:
00:000000EE 623A            	   236:    st     r2, GPCLR0_offset(r6)  # set external output enable low
                            	   237: nOE_waitforclkloww2:
00:000000F0 C840            	   238:    mov    r8,r12
00:000000F2 6C2D            	   239:    ld     r12, GPLEV0_offset(r6)
00:000000F4 BC6D            	   240:    btst   r12, CLK
00:000000F6 FD18            	   241:    bne    nOE_waitforclkloww2
                            	   242: 
00:000000F8 1809            	   243:    st     r8, (r1)         # post data
00:000000FA D809            	   244:    st     r8, (r13)        # ring doorbell
00:000000FC 6237            	   245:    st     r2, GPSET0_offset(r6)  # set external output enable high
00:000000FE 491F            	   246:    b      nOE_Poll_loop


Symbols by name:
ADDRBUS_SHIFT                    S:00000010
ADDRESSBUS_WIDTH                 S:00000009
CLK                              S:0000001B
DATABUS_WIDTH                    S:00000008
DATASHIFT                        S:00000002
GPCLR0_offset                    S:00000028
GPFSEL0                          S:7E200000
GPFSEL0_offset                   S:00000000
GPLEV0_offset                    S:00000034
GPSET0_offset                    S:0000001C
GPU_ARM_DBELL                    S:7E00B844
OUTPUTBIT                        S:0000000F
Poll_access_low                  A:00000020
Poll_loop                        A:00000020
RnW                              S:0000000A
bytenotwrittento                 A:000000DC
nOE_Poll_access_low              A:00000092
nOE_Poll_loop                    A:00000090
nOE_waitforclkhigh               A:000000B0
nOE_waitforclkhighloop           A:000000B0
nOE_waitforclklow                A:000000A2
nOE_waitforclklow2loop           A:000000E0
nOE_waitforclkloww2              A:000000F0
nOE_writecycle                   A:000000EE
nPCFC                            S:00000018
nPCFD                            S:00000019
use_nOE                          A:0000008E
waitforclkhigh                   A:00000040
waitforclkhighloop               A:00000040
waitforclklow                    A:0000002E
waitforclklow2loop               A:00000068
waitforclkloww2                  A:00000080
writecycle                       A:00000080

Symbols by value:
00000000 GPFSEL0_offset
00000002 DATASHIFT
00000008 DATABUS_WIDTH
00000009 ADDRESSBUS_WIDTH
0000000A RnW
0000000F OUTPUTBIT
00000010 ADDRBUS_SHIFT
00000018 nPCFC
00000019 nPCFD
0000001B CLK
0000001C GPSET0_offset
00000020 Poll_access_low
00000020 Poll_loop
00000028 GPCLR0_offset
0000002E waitforclklow
00000034 GPLEV0_offset
00000040 waitforclkhigh
00000040 waitforclkhighloop
00000068 waitforclklow2loop
00000080 waitforclkloww2
00000080 writecycle
0000008E use_nOE
00000090 nOE_Poll_loop
00000092 nOE_Poll_access_low
000000A2 nOE_waitforclklow
000000B0 nOE_waitforclkhigh
000000B0 nOE_waitforclkhighloop
000000DC bytenotwrittento
000000E0 nOE_waitforclklow2loop
000000EE nOE_writecycle
000000F0 nOE_waitforclkloww2
7E00B844 GPU_ARM_DBELL
7E200000 GPFSEL0
